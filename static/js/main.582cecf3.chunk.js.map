{"version":3,"sources":["components/Card/Card.module.scss","assets/logo.svg","components/Header/Header.module.scss","components/Main/Main.module.scss","components/Footer/Footer.module.scss","components/Sidebar/Sidebar.module.scss","components/Cards/Cards.module.scss","components/Header/Header.tsx","components/Main/Main.tsx","components/Footer/Footer.tsx","components/SelectField/SelectField.tsx","api/api.ts","helpers/helpers.ts","stores/movieStore.ts","contexts/index.tsx","hooks/use-stores.tsx","containers/SortBy/SortBy.tsx","containers/FilterByGenre/FilterByGenre.tsx","components/RangeField/RangeField.tsx","containers/UserScore/UserScore.tsx","components/Sidebar/Sidebar.tsx","components/Card/Card.tsx","components/Loading/Loading.tsx","components/Cards/Cards.tsx","components/Title/Title.tsx","components/Layout/Layout.tsx","containers/App/App.tsx","index.tsx"],"names":["module","exports","Header","className","s","header","src","Logo","alt","Main","props","main","children","Footer","footer","SelectField","options","value","isMulti","change","placeholder","defaultValue","onChange","API_DEFAULT_URLS","API","axios","create","baseURL","interceptors","request","use","config","params","api_key","process","error","Promise","reject","filter","type","movies","filterValue","filtered","length","movie","every","id","genre_ids","includes","vote_average","MovieStore","action","bound","nowPlaying","genres","movieSortOrder","movieChosenGenres","userScore","status","console","log","this","urls","requests","map","url","get","page","nextPage","all","then","responses","response","data","saveNowPlaying","saveGenres","catch","err","results","total_pages","dates","total_results","sortOrder","result","orderBy","b","popularity","release_date","title","Error","sort","item","pick","computed","decorate","observable","storesContext","React","createContext","movieStore","useStores","useContext","SortBy","observer","label","option","changeSortOrder","FilterByGenre","genre","name","valuesFormated","reduce","acc","cur","some","el","changeChosenGenres","useStyles","makeStyles","root","width","p","fontFamily","slider","color","valuetext","RangeField","classes","Typography","gutterBottom","Slider","getAriaValueText","aria-labelledby","valueLabelDisplay","step","marks","min","max","event","UserScore","changeUserScore","Sidebar","sidebar","Card","wrapper","card","poster_path","description","genresText","join","theme","createStyles","height","margin","justifyContent","display","Loading","CircularProgress","Cards","pageStart","loadMore","loadMoreMoviesAsync","hasMore","loader","key","uniqid","cards","ids","getGenresText","Title","Layout","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.582cecf3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Card_wrapper__1v-H4\",\"card\":\"Card_card__3U8v9\",\"description\":\"Card_description__1Kq2S\",\"title\":\"Card_title__3RCMy\"};","module.exports = __webpack_public_path__ + \"static/media/logo.31d26327.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3_sCI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__1i2Zh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__37Kwf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__AuYMI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Cards_cards__2DDO1\"};","import React from \"react\";\r\nimport Logo from \"../../assets/logo.svg\";\r\nimport s from \"./Header.module.scss\";\r\n\r\nconst Header: React.FC = (): JSX.Element => {\r\n  return (\r\n    <header className={s.header}>\r\n      <img src={Logo} alt=\"themoviedb_logo\" />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport s from \"./Main.module.scss\";\r\n\r\nconst Main: React.FC = (props): JSX.Element => {\r\n  return <main className={s.main}>{props.children}</main>;\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport Logo from \"../../assets/logo.svg\";\r\nimport s from \"./Footer.module.scss\";\r\n\r\nconst Footer: React.FC = (props): JSX.Element => {\r\n  return (\r\n    <footer className={s.footer}>\r\n      <img src={Logo} alt=\"themoviedb_logo\" />\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nexport type Option = {\r\n  value: any;\r\n  label: any;\r\n};\r\n\r\ninterface Props {\r\n  options: Option[];\r\n  value: any;\r\n  change: (option: any) => void;\r\n  isMulti?: boolean;\r\n  placeholder?: string;\r\n}\r\n\r\nconst SelectField: React.FC<Props> = ({\r\n  options,\r\n  value,\r\n  isMulti = false,\r\n  change,\r\n  placeholder,\r\n}): JSX.Element => {\r\n  return (\r\n    <Select\r\n      options={options}\r\n      defaultValue={value}\r\n      onChange={change}\r\n      isMulti={isMulti}\r\n      placeholder={placeholder}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SelectField;\r\n","/**\r\n * Here will be all api's stuff\r\n *\r\n */\r\n\r\nimport axios from \"axios\";\r\n\r\n/**\r\n * Conditionally saving data in values, this is for usage mock data if used without api_key\r\n *\r\n */\r\nexport const API_DEFAULT_URLS = process.env.REACT_APP_TMDb_API_KEY\r\n  ? [\"/movie/now_playing\", \"/genre/movie/list\"]\r\n  : [\"/now_playing.json\", \"/genre.json\"];\r\n\r\nconst baseURL = process.env.REACT_APP_TMDb_API_KEY\r\n  ? \"https://api.themoviedb.org/3/\"\r\n  : \"/\";\r\n\r\nexport const API = axios.create({\r\n  baseURL: baseURL,\r\n});\r\n\r\nAPI.interceptors.request.use(\r\n  (config) =>\r\n    (config = {\r\n      ...config,\r\n      params: { ...config.params, api_key: process.env.REACT_APP_TMDb_API_KEY },\r\n    }),\r\n  (error) => Promise.reject(error)\r\n);\r\n","import { orderBy } from \"lodash\";\r\nimport { SearchResultModel, SortOrder, Result } from \"../models\";\r\nimport { pick } from \"lodash\";\r\n\r\nexport type FilterType = \"ByGenres\" | \"ByUserScore\";\r\n/**\r\n * the outsourced function, that makes sorting movies on a page\r\n *\r\n */\r\nexport const sort = (movies: SearchResultModel[], sortOrder: SortOrder) => {\r\n  if (sortOrder === \"Popularity Descending\") {\r\n    return orderBy(movies, (b) => b.popularity, \"desc\");\r\n  } else if (sortOrder === \"Popularity Ascending\") {\r\n    return orderBy(movies, (b) => b.popularity, \"asc\");\r\n  } else if (sortOrder === \"Rating Descending\") {\r\n    return orderBy(movies, (b) => b.vote_average, \"desc\");\r\n  } else if (sortOrder === \"Rating Ascending\") {\r\n    return orderBy(movies, (b) => b.vote_average, \"asc\");\r\n  } else if (sortOrder === \"Release Date Descending\") {\r\n    return orderBy(movies, (b) => b.release_date, \"desc\");\r\n  } else if (sortOrder === \"Release Date Ascending\") {\r\n    return orderBy(movies, (b) => b.release_date, \"asc\");\r\n  } else if (sortOrder === \"Title (A-Z)\") {\r\n    return orderBy(movies, (b) => b.title, \"asc\");\r\n  } else if (sortOrder === \"Title (Z-A)\") {\r\n    return orderBy(movies, (b) => b.title, \"desc\");\r\n  } else {\r\n    throw new Error(\"Unknown sort order\");\r\n  }\r\n};\r\n/**\r\n * the outsourced function, that makes filter movies on a page\r\n *\r\n */\r\nexport const filter = (\r\n  type: FilterType,\r\n  movies: SearchResultModel[],\r\n  filterValue: any\r\n) => {\r\n  let filtered = movies;\r\n\r\n  if (type === \"ByGenres\") {\r\n    if (filterValue?.length > 0) {\r\n      filtered = movies.filter((movie) => {\r\n        return filterValue?.every((id: number) => movie.genre_ids.includes(id));\r\n      });\r\n    }\r\n  } else if (type === \"ByUserScore\") {\r\n    filtered = filtered.filter((movie) => {\r\n      return movie.vote_average >= filterValue;\r\n    });\r\n  }\r\n  return filtered;\r\n};\r\n/**\r\n * the outsourced function, pick only values by key that are really needed\r\n *\r\n */\r\nexport const pickResultValues = (results: Result[]) => {\r\n  return results.map((item) =>\r\n    pick(item, [\r\n      \"title\",\r\n      \"poster_path\",\r\n      \"genre_ids\",\r\n      \"popularity\",\r\n      \"vote_average\",\r\n      \"release_date\",\r\n    ])\r\n  );\r\n};\r\n","import { observable, action, decorate, computed } from \"mobx\";\r\nimport {\r\n  NowPlayingModel,\r\n  GenreModel,\r\n  SearchResultModel,\r\n  Genre,\r\n  SortOrder,\r\n  Status,\r\n} from \"../models\";\r\nimport { API, API_DEFAULT_URLS } from \"../api/api\";\r\nimport { sort, filter, pickResultValues } from \"../helpers/helpers\";\r\n\r\nexport class MovieStore {\r\n  public nowPlaying: NowPlayingModel = null;\r\n  public genres: Genre[] = null;\r\n  public movieSortOrder: SortOrder = \"Popularity Descending\";\r\n  public movieChosenGenres: number[] = null;\r\n  public userScore: number | number[] = 3;\r\n  public status: Status = null;\r\n  /**\r\n   * init async method in store that fetch data from the server\r\n   *\r\n   */\r\n  @action.bound\r\n  loadMoreMoviesAsync() {\r\n    console.log(this.status);\r\n    if (this.status !== \"pending\") {\r\n      this.status = \"pending\";\r\n\r\n      let urls = [API_DEFAULT_URLS[0]];\r\n      if (!this.genres) {\r\n        urls = [...urls, API_DEFAULT_URLS[1]];\r\n      }\r\n      const requests = urls.map((url) =>\r\n        API.get(url, {\r\n          params: { page: this.nextPage },\r\n        })\r\n      );\r\n\r\n      Promise.all(requests)\r\n        .then((responses) => {\r\n          return responses.map((response) => {\r\n            return response.data;\r\n          });\r\n        })\r\n        .then((responses) => {\r\n          this.status = \"succes\";\r\n          if (responses[0]) {\r\n            this.saveNowPlaying(responses[0]);\r\n          }\r\n          if (responses[1]) {\r\n            this.saveGenres(responses[1]);\r\n          }\r\n          return;\r\n        })\r\n\r\n        .catch((err) => {\r\n          this.status = \"error\";\r\n          console.error(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  @computed get nextPage() {\r\n    if (this.nowPlaying?.page) {\r\n      return this.nowPlaying.page + 1;\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  @computed get result(): SearchResultModel[] {\r\n    if (this.nowPlaying) {\r\n      let result = sort(\r\n        pickResultValues(this.nowPlaying.results),\r\n        this.movieSortOrder\r\n      );\r\n      result = filter(\"ByGenres\", result, this.movieChosenGenres);\r\n      result = filter(\"ByUserScore\", result, this.userScore);\r\n      return result;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * save now playing values over old ones except results key, they stored all from first page\r\n   *\r\n   */\r\n  @action.bound\r\n  saveNowPlaying(nowPlaying: NowPlayingModel) {\r\n    if (!this.nowPlaying) {\r\n      this.nowPlaying = nowPlaying;\r\n    } else {\r\n      this.nowPlaying = {\r\n        results: [...this.nowPlaying.results, ...nowPlaying.results],\r\n        page: nowPlaying.page,\r\n        total_pages: nowPlaying.total_pages,\r\n        dates: nowPlaying.dates,\r\n        total_results: nowPlaying.total_results,\r\n      };\r\n    }\r\n  }\r\n  /**\r\n   * action save genres to store\r\n   *\r\n   */\r\n  @action.bound\r\n  saveGenres(genres: GenreModel) {\r\n    this.genres = genres.genres;\r\n  }\r\n  /**\r\n   * change sorting order\r\n   *\r\n   */\r\n  @action.bound\r\n  changeSortOrder(sortOrder: SortOrder) {\r\n    this.movieSortOrder = sortOrder;\r\n  }\r\n  /**\r\n   * change genres filter\r\n   *\r\n   */\r\n  @action.bound\r\n  changeChosenGenres(movieChosenGenres: number[]) {\r\n    this.movieChosenGenres = movieChosenGenres;\r\n  }\r\n  /**\r\n   * change user score filter\r\n   *\r\n   */\r\n  @action.bound\r\n  changeUserScore(userScore: number | number[]) {\r\n    this.userScore = userScore;\r\n  }\r\n}\r\n\r\ndecorate(MovieStore, {\r\n  nowPlaying: observable,\r\n  genres: observable,\r\n  movieSortOrder: observable,\r\n  movieChosenGenres: observable,\r\n  userScore: observable,\r\n  status: observable,\r\n});\r\n","import React from \"react\";\r\nimport { MovieStore } from \"../stores\";\r\n\r\nexport const storesContext = React.createContext({\r\n  movieStore: new MovieStore(),\r\n});\r\n","import React from \"react\";\r\nimport { storesContext } from \"../contexts\";\r\n// there is hook for mobX store\r\nexport const useStores = () => React.useContext(storesContext);\r\n","import React from \"react\";\r\nimport SelectField, { Option } from \"../../components/SelectField/SelectField\";\r\nimport { useStores } from \"../../hooks/use-stores\";\r\nimport { observer } from \"mobx-react\";\r\n/**\r\n * Container that config Select Field component\r\n *\r\n */\r\nconst SortBy: React.FC = observer(\r\n  (): JSX.Element => {\r\n    const { movieStore } = useStores();\r\n    const options: Option[] = [\r\n      { value: \"Popularity Descending\", label: \"Popularity Descending\" },\r\n      { value: \"Popularity Ascending\", label: \"Popularity Ascending\" },\r\n      { value: \"Rating Descending\", label: \"Rating Descending\" },\r\n      { value: \"Rating Ascending\", label: \"Rating Ascending\" },\r\n      { value: \"Release Date Descending\", label: \"Release Date Descending\" },\r\n      { value: \"Release Date Ascending\", label: \"Release Date Ascending\" },\r\n      { value: \"Title (A-Z)\", label: \"Title (A-Z)\" },\r\n      { value: \"Title (Z-A)\", label: \"Title (Z-A)\" },\r\n    ];\r\n\r\n    const handleChange = (option: Option): void => {\r\n      movieStore.changeSortOrder(option.value);\r\n    };\r\n    return (\r\n      <SelectField\r\n        options={options}\r\n        value={{\r\n          value: movieStore.movieSortOrder,\r\n          label: movieStore.movieSortOrder,\r\n        }}\r\n        change={handleChange}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default SortBy;\r\n","import React from \"react\";\r\nimport SelectField, { Option } from \"../../components/SelectField/SelectField\";\r\nimport { useStores } from \"../../hooks/use-stores\";\r\nimport { observer } from \"mobx-react\";\r\n/**\r\n * Container that config Select Field component\r\n *\r\n */\r\nconst FilterByGenre: React.FC = observer(\r\n  (): JSX.Element => {\r\n    const { movieStore } = useStores();\r\n\r\n    // convert genres to Option[] type view\r\n    const options = movieStore.genres?.map((genre) => {\r\n      return {\r\n        value: genre.id,\r\n        label: genre.name,\r\n      };\r\n    });\r\n    // format from number or number[] genres ids to Option[] type\r\n    const valuesFormated: Option[] = movieStore.genres?.reduce((acc, cur) => {\r\n      if (movieStore.movieChosenGenres?.some((el) => el === cur.id)) {\r\n        return [...acc, { value: cur.id, label: cur.name }];\r\n      }\r\n      return acc;\r\n    }, []);\r\n    // simple handler that trigger change into store\r\n    const handleChange = (option: Option[]): void => {\r\n      const genres = option?.map((el) => el.value);\r\n      movieStore.changeChosenGenres(genres);\r\n    };\r\n    return (\r\n      <SelectField\r\n        options={options}\r\n        value={valuesFormated}\r\n        change={handleChange}\r\n        isMulti={true}\r\n        placeholder=\"Select genre...\"\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default FilterByGenre;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\ninterface Props {\r\n  label: string;\r\n  value: number | number[];\r\n  change: (value: number | number[]) => void;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  p: {\r\n    fontFamily: \"Comic Neue, cursive\",\r\n  },\r\n  slider: {\r\n    color: \"#01b4e4\",\r\n  },\r\n});\r\n\r\nfunction valuetext(value: number) {\r\n  return `${value}°C`;\r\n}\r\n\r\nconst RangeField: React.FC<Props> = (props): JSX.Element => {\r\n  const classes = useStyles();\r\n  const onChangeHandler = (\r\n    event: React.ChangeEvent<{}>,\r\n    value: number | number[]\r\n  ) => {\r\n    props.change(value);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography id=\"discrete-slider\" gutterBottom className={classes.p}>\r\n        {props.label}\r\n      </Typography>\r\n      <Slider\r\n        className={classes.slider}\r\n        defaultValue={props.value}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider\"\r\n        valueLabelDisplay=\"auto\"\r\n        step={0.5}\r\n        marks\r\n        min={0}\r\n        max={10}\r\n        onChange={onChangeHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default RangeField;\r\n","import React from \"react\";\r\nimport RangeField from \"../../components/RangeField/RangeField\";\r\nimport { useStores } from \"../../hooks/use-stores\";\r\n/**\r\n * Container that config RangeField component\r\n *\r\n */\r\nconst UserScore: React.FC = (props): JSX.Element => {\r\n  const { movieStore } = useStores();\r\n  const changeUserScore = movieStore.changeUserScore;\r\n  return (\r\n    <RangeField\r\n      label=\"User Score\"\r\n      value={movieStore.userScore}\r\n      change={changeUserScore}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UserScore;\r\n","import React from \"react\";\r\nimport s from \"./Sidebar.module.scss\";\r\nimport SortBy from \"../../containers/SortBy/SortBy\";\r\nimport FilterByGenre from \"../../containers/FilterByGenre/FilterByGenre\";\r\nimport UserScore from \"../../containers/UserScore/UserScore\";\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <aside className={s.sidebar}>\r\n      <SortBy />\r\n      <FilterByGenre />\r\n      <UserScore />\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport s from \"./Card.module.scss\";\r\nimport { SearchResultModel } from \"../../models\";\r\n\r\ninterface Props {\r\n  movie: SearchResultModel;\r\n  genresText: string[];\r\n}\r\n\r\nconst Card: React.FC<Props> = observer(\r\n  (props): JSX.Element => {\r\n    const movie = props.movie;\r\n    return (\r\n      <div className={s.wrapper}>\r\n        <div className={s.card}>\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\r\n            alt={movie.title}\r\n          />\r\n          <div className={s.description}>\r\n            <span className={s.title}>{movie.title}</span>\r\n            <span>{props.genresText?.join(\", \")}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      height: \"50px\",\r\n      margin: \"20px\",\r\n      justifyContent: \"center\",\r\n      display: \"flex\",\r\n      color: \"#01b4e4\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default function Loading() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../../hooks/use-stores\";\r\nimport Card from \"../Card/Card\";\r\nimport uniqid from \"uniqid\";\r\nimport s from \"./Cards.module.scss\";\r\nimport { Genre } from \"../../models\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\n\r\nconst getGenresText = (genres: Genre[], ids: number[]): string[] => {\r\n  return genres?.reduce((acc, cur) => {\r\n    if (ids.some((id) => id === cur.id)) {\r\n      return [...acc, cur.name];\r\n    }\r\n    return acc;\r\n  }, []);\r\n};\r\n\r\nconst Cards = observer(() => {\r\n  const { movieStore } = useStores();\r\n  return (\r\n    <InfiniteScroll\r\n      pageStart={0}\r\n      loadMore={movieStore.loadMoreMoviesAsync}\r\n      hasMore={true || false}\r\n      loader={<Loading key={uniqid()} />}\r\n    >\r\n      <div className={s.cards}>\r\n        {movieStore?.result?.map((item) => {\r\n          const genres: string[] = getGenresText(\r\n            movieStore.genres,\r\n            item.genre_ids\r\n          );\r\n          return <Card key={uniqid()} movie={item} genresText={genres} />;\r\n        })}\r\n      </div>\r\n    </InfiniteScroll>\r\n  );\r\n});\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\n\r\nconst Title = () => {\r\n  return (\r\n    <div className=\"title\">\r\n      <h1 className=\"title__text\">Now Playing Movies</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport Main from \"../Main/Main\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport Cards from \"../Cards/Cards\";\r\nimport Title from \"../Title/Title\";\r\n\r\nconst Layout: React.FC = (): JSX.Element => {\r\n  return (\r\n    <>\r\n      <Header>Header</Header>\r\n\r\n      <div className=\"container\">\r\n        <Title />\r\n        <div className=\"content\">\r\n          <Sidebar />\r\n          <Main>\r\n            <Cards />\r\n          </Main>\r\n        </div>\r\n      </div>\r\n\r\n      <Footer>Footer</Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst App = observer(() => {\r\n  return <Layout />;\r\n});\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./containers/App/App\";\r\nimport \"./scss/main.scss\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}