{"version":3,"sources":["components/Card/Card.module.scss","assets/logo.svg","components/Header/Header.module.scss","components/Main/Main.module.scss","components/Footer/Footer.module.scss","components/Sidebar/Sidebar.module.scss","components/Cards/Cards.module.scss","components/Header/Header.tsx","components/Main/Main.tsx","components/Footer/Footer.tsx","components/SelectField/SelectField.tsx","api/api.ts","helpers/helpers.ts","stores/movieStore.ts","contexts/index.tsx","hooks/use-stores.tsx","containers/SortBy/SortBy.tsx","containers/FilterByGenre/FilterByGenre.tsx","components/RangeField/RangeField.tsx","containers/UserScore/UserScore.tsx","components/Sidebar/Sidebar.tsx","components/Card/Card.tsx","components/Loading/Loading.tsx","components/Cards/Cards.tsx","components/Title/Title.tsx","components/Layout/Layout.tsx","containers/App/App.tsx","index.tsx"],"names":["module","exports","Header","className","s","header","src","Logo","alt","Main","props","main","children","Footer","footer","SelectField","options","value","isMulti","change","placeholder","defaultValue","onChange","API_DEFAULT_URLS","API","axios","create","baseURL","interceptors","request","use","config","params","api_key","process","error","Promise","reject","filter","type","movies","filterValue","filtered","length","movie","every","id","genre_ids","includes","vote_average","MovieStore","action","bound","nowPlaying","genres","movieSortOrder","movieChosenGenres","userScore","status","nextPage","this","urls","requests","map","url","get","page","all","then","responses","response","data","saveNowPlaying","saveGenres","catch","err","console","results","total_pages","dates","total_results","sortOrder","Boolean","result","orderBy","b","popularity","release_date","title","Error","sort","computed","decorate","observable","storesContext","React","createContext","movieStore","useStores","useContext","SortBy","observer","label","option","changeSortOrder","FilterByGenre","genre","name","valuesFormated","reduce","acc","cur","some","el","changeChosenGenres","useStyles","makeStyles","root","width","p","fontFamily","slider","color","valuetext","RangeField","classes","Typography","gutterBottom","Slider","getAriaValueText","aria-labelledby","valueLabelDisplay","step","marks","min","max","event","UserScore","changeUserScore","debounce","Sidebar","sidebar","Card","wrapper","card","poster_path","description","genresText","join","theme","createStyles","height","margin","justifyContent","display","Loading","CircularProgress","Cards","pageStart","loadMore","fetchData","hasMore","loader","key","uniqid","threshold","cards","item","ids","getGenresText","Title","Layout","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57f4d595.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Card_wrapper__1V7DQ\",\"card\":\"Card_card__35wN0\",\"description\":\"Card_description__33vK6\",\"title\":\"Card_title__Ip0in\"};","module.exports = __webpack_public_path__ + \"static/media/logo.31d26327.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__3JhNz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3qUkX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Cards_cards__2PUIK\"};","import React from \"react\";\nimport Logo from \"../../assets/logo.svg\";\nimport s from \"./Header.module.scss\";\n\nconst Header: React.FC = (): JSX.Element => {\n  return (\n    <header className={s.header}>\n      <img src={Logo} alt=\"themoviedb_logo\" />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport s from \"./Main.module.scss\";\n\nconst Main: React.FC = (props): JSX.Element => {\n  return <main className={s.main}>{props.children}</main>;\n};\n\nexport default Main;\n","import React from \"react\";\nimport Logo from \"../../assets/logo.svg\";\nimport s from \"./Footer.module.scss\";\n\nconst Footer: React.FC = (props): JSX.Element => {\n  return (\n    <footer className={s.footer}>\n      <img src={Logo} alt=\"themoviedb_logo\" />\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Select from \"react-select\";\n\nexport type Option = {\n  value: any;\n  label: any;\n};\n\ninterface Props {\n  options: Option[];\n  value: any;\n  change: (option: any) => void;\n  isMulti?: boolean;\n  placeholder?: string;\n}\n\nconst SelectField: React.FC<Props> = ({\n  options,\n  value,\n  isMulti = false,\n  change,\n  placeholder,\n}): JSX.Element => {\n  return (\n    <Select\n      options={options}\n      defaultValue={value}\n      onChange={change}\n      isMulti={isMulti}\n      placeholder={placeholder}\n    />\n  );\n};\n\nexport default SelectField;\n","/**\n * Here will be all api's stuff\n *\n */\n\nimport axios from \"axios\";\n\n/**\n * Conditionally saving data in values, this is for usage mock data if used without api_key\n *\n */\nexport const API_DEFAULT_URLS = process.env.REACT_APP_TMDb_API_KEY\n  ? [\"/movie/now_playing\", \"/genre/movie/list\"]\n  : [\"/now_playing.json\", \"/genre.json\"];\n\nconst baseURL = process.env.REACT_APP_TMDb_API_KEY\n  ? \"https://api.themoviedb.org/3/\"\n  : \"/\";\n\nexport const API = axios.create({\n  baseURL: baseURL,\n});\n\nAPI.interceptors.request.use(\n  (config) =>\n    (config = {\n      ...config,\n      params: { ...config.params, api_key: process.env.REACT_APP_TMDb_API_KEY },\n    }),\n  (error) => Promise.reject(error)\n);\n","import { orderBy } from \"lodash\";\nimport { SearchResultModel, SortOrder } from \"../models\";\n\nexport type FilterType = \"ByGenres\" | \"ByUserScore\";\n/**\n * the outsourced function, that makes sorting movies on a page\n *\n */\nexport const sort = (movies: SearchResultModel[], sortOrder: SortOrder) => {\n  if (sortOrder === \"Popularity Descending\") {\n    return orderBy(movies, (b) => b.popularity, \"desc\");\n  } else if (sortOrder === \"Popularity Ascending\") {\n    return orderBy(movies, (b) => b.popularity, \"asc\");\n  } else if (sortOrder === \"Rating Descending\") {\n    return orderBy(movies, (b) => b.vote_average, \"desc\");\n  } else if (sortOrder === \"Rating Ascending\") {\n    return orderBy(movies, (b) => b.vote_average, \"asc\");\n  } else if (sortOrder === \"Release Date Descending\") {\n    return orderBy(movies, (b) => b.release_date, \"desc\");\n  } else if (sortOrder === \"Release Date Ascending\") {\n    return orderBy(movies, (b) => b.release_date, \"asc\");\n  } else if (sortOrder === \"Title (A-Z)\") {\n    return orderBy(movies, (b) => b.title, \"asc\");\n  } else if (sortOrder === \"Title (Z-A)\") {\n    return orderBy(movies, (b) => b.title, \"desc\");\n  } else {\n    throw new Error(\"Unknown sort order\");\n  }\n};\n/**\n * the outsourced function, that makes filter movies on a page\n *\n */\nexport const filter = (\n  type: FilterType,\n  movies: SearchResultModel[],\n  filterValue: any\n) => {\n  let filtered = movies;\n\n  if (type === \"ByGenres\") {\n    if (filterValue?.length > 0) {\n      filtered = movies.filter((movie) => {\n        return filterValue?.every((id: number) => movie.genre_ids.includes(id));\n      });\n    }\n  } else if (type === \"ByUserScore\") {\n    filtered = filtered.filter((movie) => {\n      return movie.vote_average >= filterValue;\n    });\n  }\n  return filtered;\n};\n","import { observable, action, decorate, computed } from \"mobx\";\nimport {\n  NowPlayingModel,\n  GenreModel,\n  SearchResultModel,\n  Genre,\n  SortOrder,\n  Status,\n} from \"../models\";\nimport { API, API_DEFAULT_URLS } from \"../api/api\";\nimport { sort, filter } from \"../helpers/helpers\";\n\nexport class MovieStore {\n  public nowPlaying: NowPlayingModel = null;\n  public genres: Genre[] = null;\n  public movieSortOrder: SortOrder = \"Popularity Descending\";\n  public movieChosenGenres: number[] = null;\n  public userScore: number | number[] = 3;\n  public status: Status = null;\n  /**\n   * init async method in store that fetch data from the server\n   *\n   */\n  @action.bound\n  fetchData(nextPage?: number) {\n    if (this.status !== \"pending\") {\n      this.status = \"pending\";\n\n      let urls = [API_DEFAULT_URLS[0]];\n      if (!this.genres) {\n        urls = [...urls, API_DEFAULT_URLS[1]];\n      }\n      const requests = urls.map((url) =>\n        API.get(url, {\n          params: { page: nextPage },\n        })\n      );\n\n      Promise.all(requests)\n        .then((responses) => {\n          return responses.map((response) => {\n            return response.data;\n          });\n        })\n        .then((responses) => {\n          this.status = \"success\";\n          if (responses[0]) {\n            this.saveNowPlaying(responses[0]);\n          }\n          if (responses[1]) {\n            this.saveGenres(responses[1]);\n          }\n          return;\n        })\n\n        .catch((err) => {\n          this.status = \"error\";\n          console.error(err);\n        });\n    }\n  }\n\n  @computed get hasMore() {\n    if (this.status === null) {\n      return true;\n    } else {\n      return Boolean(this.nowPlaying?.total_pages - this.nowPlaying?.page);\n    }\n  }\n\n  @computed get result(): SearchResultModel[] {\n    if (this.nowPlaying) {\n      let result: SearchResultModel[] = this.nowPlaying.results;\n      result = filter(\"ByGenres\", result, this.movieChosenGenres);\n      result = filter(\"ByUserScore\", result, this.userScore);\n      result = sort(result, this.movieSortOrder);\n      return result;\n    }\n    return null;\n  }\n\n  /**\n   * save now playing values over old ones except results key, they stored all from first page\n   *\n   */\n  @action.bound\n  saveNowPlaying(nowPlaying: NowPlayingModel) {\n    if (!this.nowPlaying) {\n      this.nowPlaying = nowPlaying;\n    } else {\n      this.nowPlaying = {\n        results: [...this.nowPlaying.results, ...nowPlaying.results],\n        page: nowPlaying.page,\n        total_pages: nowPlaying.total_pages,\n        dates: nowPlaying.dates,\n        total_results: nowPlaying.total_results,\n      };\n    }\n  }\n  /**\n   * action save genres to store\n   *\n   */\n  @action.bound\n  saveGenres(genres: GenreModel) {\n    this.genres = genres.genres;\n  }\n  /**\n   * change sorting order\n   *\n   */\n  @action.bound\n  changeSortOrder(sortOrder: SortOrder) {\n    this.movieSortOrder = sortOrder;\n  }\n  /**\n   * change genres filter\n   *\n   */\n  @action.bound\n  changeChosenGenres(movieChosenGenres: number[]) {\n    this.movieChosenGenres = movieChosenGenres;\n  }\n  /**\n   * change user score filter\n   *\n   */\n  @action.bound\n  changeUserScore(userScore: number | number[]) {\n    this.userScore = userScore;\n  }\n}\n\ndecorate(MovieStore, {\n  nowPlaying: observable,\n  genres: observable,\n  movieSortOrder: observable,\n  movieChosenGenres: observable,\n  userScore: observable,\n  status: observable,\n});\n","import React from \"react\";\nimport { MovieStore } from \"../stores\";\n\nexport const storesContext = React.createContext({\n  movieStore: new MovieStore(),\n});\n","import React from \"react\";\nimport { storesContext } from \"../contexts\";\n// there is hook for mobX store\nexport const useStores = () => React.useContext(storesContext);\n","import React from \"react\";\nimport SelectField, { Option } from \"../../components/SelectField/SelectField\";\nimport { useStores } from \"../../hooks/use-stores\";\nimport { observer } from \"mobx-react\";\n/**\n * Container that config Select Field component\n *\n */\nconst SortBy: React.FC = observer(\n  (): JSX.Element => {\n    const { movieStore } = useStores();\n    const options: Option[] = [\n      { value: \"Popularity Descending\", label: \"Popularity Descending\" },\n      { value: \"Popularity Ascending\", label: \"Popularity Ascending\" },\n      { value: \"Rating Descending\", label: \"Rating Descending\" },\n      { value: \"Rating Ascending\", label: \"Rating Ascending\" },\n      { value: \"Release Date Descending\", label: \"Release Date Descending\" },\n      { value: \"Release Date Ascending\", label: \"Release Date Ascending\" },\n      { value: \"Title (A-Z)\", label: \"Title (A-Z)\" },\n      { value: \"Title (Z-A)\", label: \"Title (Z-A)\" },\n    ];\n\n    const handleChange = (option: Option): void => {\n      movieStore.changeSortOrder(option.value);\n    };\n    return (\n      <SelectField\n        options={options}\n        value={{\n          value: movieStore.movieSortOrder,\n          label: movieStore.movieSortOrder,\n        }}\n        change={handleChange}\n      />\n    );\n  }\n);\n\nexport default SortBy;\n","import React from \"react\";\nimport SelectField, { Option } from \"../../components/SelectField/SelectField\";\nimport { useStores } from \"../../hooks/use-stores\";\nimport { observer } from \"mobx-react\";\n/**\n * Container that config Select Field component\n *\n */\nconst FilterByGenre: React.FC = observer(\n  (): JSX.Element => {\n    const { movieStore } = useStores();\n\n    // convert genres to Option[] type view\n    const options = movieStore.genres?.map((genre) => {\n      return {\n        value: genre.id,\n        label: genre.name,\n      };\n    });\n    // format from number or number[] genres ids to Option[] type\n    const valuesFormated: Option[] = movieStore.genres?.reduce((acc, cur) => {\n      if (movieStore.movieChosenGenres?.some((el) => el === cur.id)) {\n        return [...acc, { value: cur.id, label: cur.name }];\n      }\n      return acc;\n    }, []);\n    // simple handler that trigger change into store\n    const handleChange = (option: Option[]): void => {\n      const genres = option?.map((el) => el.value);\n      movieStore.changeChosenGenres(genres);\n    };\n    return (\n      <SelectField\n        options={options}\n        value={valuesFormated}\n        change={handleChange}\n        isMulti={true}\n        placeholder=\"Select genre...\"\n      />\n    );\n  }\n);\n\nexport default FilterByGenre;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\n\ninterface Props {\n  label: string;\n  value: number | number[];\n  change: (value: number | number[]) => void;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  p: {\n    fontFamily: \"Comic Neue, cursive\",\n  },\n  slider: {\n    color: \"#01b4e4\",\n  },\n});\n\nfunction valuetext(value: number) {\n  return `${value}°C`;\n}\n\nconst RangeField: React.FC<Props> = (props): JSX.Element => {\n  const classes = useStyles();\n  const onChangeHandler = (\n    event: React.ChangeEvent<{}>,\n    value: number | number[]\n  ) => {\n    props.change(value);\n  };\n  return (\n    <div className={classes.root}>\n      <Typography id=\"discrete-slider\" gutterBottom className={classes.p}>\n        {props.label}\n      </Typography>\n      <Slider\n        className={classes.slider}\n        defaultValue={props.value}\n        getAriaValueText={valuetext}\n        aria-labelledby=\"discrete-slider\"\n        valueLabelDisplay=\"auto\"\n        step={0.5}\n        marks\n        min={0}\n        max={10}\n        onChange={onChangeHandler}\n      />\n    </div>\n  );\n};\nexport default RangeField;\n","import React from \"react\";\nimport RangeField from \"../../components/RangeField/RangeField\";\nimport { useStores } from \"../../hooks/use-stores\";\nimport { debounce } from \"lodash\";\n/**\n * Container that config RangeField component\n *\n */\nconst UserScore: React.FC = (props): JSX.Element => {\n  const { movieStore } = useStores();\n  const changeUserScore = debounce(movieStore.changeUserScore, 300);\n  return (\n    <RangeField\n      label=\"User Score\"\n      value={movieStore.userScore}\n      change={changeUserScore}\n    />\n  );\n};\n\nexport default UserScore;\n","import React from \"react\";\nimport s from \"./Sidebar.module.scss\";\nimport SortBy from \"../../containers/SortBy/SortBy\";\nimport FilterByGenre from \"../../containers/FilterByGenre/FilterByGenre\";\nimport UserScore from \"../../containers/UserScore/UserScore\";\n\nconst Sidebar = () => {\n  return (\n    <aside className={s.sidebar}>\n      <SortBy />\n      <FilterByGenre />\n      <UserScore />\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport s from \"./Card.module.scss\";\nimport { SearchResultModel } from \"../../models\";\n\ninterface Props {\n  movie: SearchResultModel;\n  genresText: string[];\n}\n\nconst Card: React.FC<Props> = observer(\n  (props): JSX.Element => {\n    const movie = props.movie;\n    return (\n      <div className={s.wrapper}>\n        <div className={s.card}>\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n            alt={movie.title}\n          />\n          <div className={s.description}>\n            <span className={s.title}>{movie.title}</span>\n            <span>{props.genresText?.join(\", \")}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default Card;\n","import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      height: \"50px\",\n      margin: \"20px\",\n      justifyContent: \"center\",\n      display: \"flex\",\n      color: \"#01b4e4\",\n    },\n  })\n);\n\nexport default function Loading() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress color=\"inherit\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { useStores } from \"../../hooks/use-stores\";\nimport Card from \"../Card/Card\";\nimport uniqid from \"uniqid\";\nimport s from \"./Cards.module.scss\";\nimport { Genre } from \"../../models\";\nimport Loading from \"../Loading/Loading\";\nimport InfiniteScroll from \"react-infinite-scroller\";\n\nconst getGenresText = (genres: Genre[], ids: number[]): string[] => {\n  return genres?.reduce((acc, cur) => {\n    if (ids.some((id) => id === cur.id)) {\n      return [...acc, cur.name];\n    }\n    return acc;\n  }, []);\n};\n\nconst Cards = observer(() => {\n  const { movieStore } = useStores();\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={movieStore.fetchData}\n      hasMore={movieStore.hasMore}\n      loader={<Loading key={uniqid()} />}\n      threshold={0}\n    >\n      <div className={s.cards}>\n        {movieStore?.result?.map((item) => {\n          const genres: string[] = getGenresText(\n            movieStore.genres,\n            item.genre_ids\n          );\n          return <Card key={uniqid()} movie={item} genresText={genres} />;\n        })}\n      </div>\n    </InfiniteScroll>\n  );\n});\n\nexport default Cards;\n","import React from \"react\";\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1 className=\"title__text\">Now Playing Movies</h1>\n    </div>\n  );\n};\n\nexport default Title;\n","import React from \"react\";\nimport Header from \"../Header/Header\";\nimport Main from \"../Main/Main\";\nimport Footer from \"../Footer/Footer\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport Cards from \"../Cards/Cards\";\nimport Title from \"../Title/Title\";\n\nconst Layout: React.FC = (): JSX.Element => {\n  return (\n    <>\n      <Header>Header</Header>\n\n      <div className=\"container\">\n        <Title />\n        <div className=\"content\">\n          <Sidebar />\n          <Main>\n            <Cards />\n          </Main>\n        </div>\n      </div>\n\n      <Footer>Footer</Footer>\n    </>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { observer } from \"mobx-react\";\n\nconst App = observer(() => {\n  return <Layout />;\n});\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App/App\";\nimport \"./scss/main.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}